# Версия Docker API
version: '3.7'
# Сервисы которые мы будем запускать
services:
# postgres db
  db:
    # Образ на основе которого он будет запускаться
    image: postgres:13.6-alpine
    # volumes - магическая вещь, которая создает некоторое устройство в 
    # рамках Docker и монтирует его в директорию /var/lib/postgresql/data
    # volumes:
    #   - postgres-data:/var/lib/postgresql/data
    # Переменные окружения 
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: flask_app
    # Открыть снаружи порт 5432
    expose:
      - 5432

# elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      - "discovery.type=single-node"
    ports:
      - 9200:9200
      - 9300:9300

# flask_app
  flask_app:
    # Говорим что его надо будет собрать - в качестве контекста
    # передаем текущую директорию - в ней лежит Dockerfile
    build: .
    # Переменные окружения 
    environment:
      SECRET_KEY: 1234
      APP_SETTINGS: config.DevelopmentConfig
      DATABASE_URL: postgresql://postgres:1234@db:5432/flask_app
      ELASTICSEARCH_URL: http://elasticsearch:9200
    # Монтируем локальную директорию . в директорию 
    # внутри контейнера /opt/flask_app
    volumes:
      - .:/opt/flask_app
    # Говорим пробросить порт 8000 хоста в порт 8000 контейнера
    ports:
      - 8000:5000
    # Зависит от сервиса db - запускать после него
    depends_on:
      - db
      - elasticsearch